# This is a basic workflow that is manually triggered

name: PLINK2 GLM TESTS

on:
  workflow_dispatch:

jobs:
  test_plink:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Plink2 repository code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip build-essential

      - name: Download Plink executable
        run: |
          PLINK_BASE_URL="https://s3.amazonaws.com/plink2-assets/alpha6"
          echo "Fetching Plink from: $PLINK_BASE_URL"

          wget -O plink_dir.html $PLINK_BASE_URL
          PLINK_ZIP=$(grep -oP 'href="\K[^"]*linux_[^"]*.zip' plink_dir.html | head -n 1)

          if [ -n "$PLINK_ZIP" ]; then
            echo "Downloading Plink: $PLINK_ZIP"
            wget -O plink.zip "$PLINK_BASE_URL/$PLINK_ZIP"
            unzip plink.zip -d plink_dir
            chmod +x plink_dir/plink2
            mv plink_dir/plink2 /usr/local/bin/plink2
          else
            echo "No matching Plink binary found."
            exit 1
          fi

      - name: Download test data
        run: |
          DATA_URL="https://drive.google.com/file/d/1duspKrxtYdf_dJe5jX4Y_GMkzmy6i8dj/view?usp=sharing"  # Hardcoded test data URL
          echo "Downloading test data from: $DATA_URL"

          wget -O test_data.zip "$DATA_URL"
          unzip test_data.zip -d test_data

      - name: Run tests with Plink
        run: |
          echo "Running tests with Plink2..."
          plink2 --pfile test_data/1kgp3_50k_yesmiss_Av_nonintdose --genotype-count dosage --out tmp  # Modify this command as needed

      - name: Check Plink output
        run: |
          if [ -f "test_data/plink_result.assoc" ]; then
            cat test_data/plink_result.assoc
          fi

