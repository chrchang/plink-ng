name: CI

on: [push,pull_request]

jobs:
  wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          - python-version: "3.7"
            runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prerequisites
        run: |
          pip install build pytest

      - name: Build and install
        working-directory: ./2.0/Python
        run: |
          python -m build --wheel .
          pip install dist/*.whl

      - name: Run tests
        working-directory: ./2.0/Python
        run: |
          pytest tests/

      - name: Test against oldest supported numpy version
        working-directory: ./2.0/Python
        if: contains(fromJson('["3.7", "3.8", "3.9"]'), matrix.python-version)
        run: |
          pip install --force-reinstall --no-cache-dir 'numpy==1.21.0'
          pytest tests/

      # - name: Test against newest numpy version
      #   working-directory: ./2.0/Python
      #   if: ${{ matrix.python-version }} != "3.7" && ${{ matrix.python-version }} != "3.8"
      #   run: |
      #     pip install --force-reinstall --no-cache-dir --pre 'numpy==2.0.0rc2'
      #     pytest tests/


  sdist:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prerequisites
        run: |
          pip install build pytest

      - name: Build and install
        working-directory: ./2.0/Python
        run: |
          python -m build . --sdist
          pip install --no-cache-dir --no-binary=pgenlib dist/pgenlib-*.tar.gz

      - name: Run tests
        working-directory: ./2.0/Python
        run: |
          pytest tests/
