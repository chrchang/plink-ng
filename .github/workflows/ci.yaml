name: CI

on: [push,pull_request]

jobs:
  wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu, macos-13, macos, windows]
        os: [ubuntu]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prerequisites
        run: |
          pip install build pytest

      - name: Build and install
        working-directory: ./2.0/Python
        run: |
          python -m build --wheel .
          pip install dist/*.whl

      - name: Run tests
        working-directory: ./2.0/Python
        run: |
          pytest tests/

      - name: Test against oldest supported numpy version
        working-directory: ./2.0/Python
        run: |
          pip install --force-reinstall --no-cache-dir 'numpy==1.20.0'
          pytest tests/

      - name: Test against newest numpy version
        working-directory: ./2.0/Python
        run: |
          pip install --force-reinstall --no-cache-dir --pre 'numpy==2.0.0rc2'
          pytest tests/


  sdist:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        # os: [ubuntu, macos]
        os: [ubuntu]
        python-version: ['3.12']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prerequisites
        run: |
          pip install build pytest

      - name: Build and install
        working-directory: ./2.0/Python
        run: |
          python -m build . --sdist
          pip install --no-cache-dir --no-binary=pgenlib dist/pgenlib-*.tar.gz

      - name: Run tests
        working-directory: ./2.0/Python
        run: |
          pytest tests/

  conda:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu]
        python-version: ['3.12']
    defaults:
      run:
        shell: bash -el {0}  # needed for conda activation

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Conda and Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge,bioconda
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          channel-priority: strict
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Install prerequisites via Conda
        run: |
          conda install pytest
      
      - name: Install
        working-directory: ./2.0/Python
        run: |
          pip install .

      - name: Run tests
        working-directory: ./2.0/Python
        run: |
          pytest tests/
